{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","prevState","reset","this","renderedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","Error","console","log","getReorderedGoods","isSorted","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAU,CAAEH,SAAUL,EAASS,YAPxC,EAUEC,aAAe,WACb,EAAKF,SAAU,CAAEH,SAAUL,EAASW,UAXxC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAACK,GAAD,MAAgB,CAC5BT,YAAaS,EAAUT,gBAhB7B,EAoBEU,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCS,KAAKZ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdW,EAvEH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNc,EAAY,YAAOD,GA4BzB,OA1BAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQhB,GACN,KAAKL,EAASS,SACZ,OAAOW,EAAEE,cAAcD,GAGzB,KAAKrB,EAASW,OACZ,OAAOS,EAAEG,OAASF,EAAEE,OAGtB,KAAKvB,EAASM,KACZ,OAAO,EAGT,QACE,MAAM,IAAIkB,MAAM,qBAKtBC,QAAQC,IAAIrB,EAAUD,GAElBA,GACFc,EAAaN,UAGRM,EAsCiBS,CACpB1B,EACA,CAAEG,aAAYC,aAEVuB,EAAWvB,IAAaL,EAASM,KAEvC,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBxB,IAAaL,EAASS,UAAY,YAC/DsB,QAAShB,KAAKR,eAHhB,iCAQA,wBACEuB,KAAK,SACLD,UAAS,4BAAuBxB,IAAaL,EAASW,QAAU,YAChEoB,QAAShB,KAAKL,aAHhB,4BAQA,wBACEoB,KAAK,SACLD,UAAS,6BAAwBzB,GAAc,YAC/C2B,QAAShB,KAAKH,QAHhB,sBAQEgB,GAAYxB,IAEV,wBACE0B,KAAK,SACLD,UAAU,4BACVE,QAAShB,KAAKD,MAHhB,sBAUN,6BACE,6BACGE,EAAcgB,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBA7EtC,GAAyBC,IAAMC,WCpE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.44313aec.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET: {\n        return a.localeCompare(b);\n      }\n\n      case SortType.LENGTH: {\n        return a.length - b.length;\n      }\n\n      case SortType.NONE: {\n        return 0;\n      }\n\n      default: {\n        throw new Error('wrong sorting');\n      }\n    }\n  });\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ninterface State {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState(({ sortType: SortType.ALPHABET }));\n  };\n\n  sortByLength = () => {\n    this.setState(({ sortType: SortType.LENGTH }));\n  };\n\n  reverse = () => {\n    this.setState((prevState) => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const renderedGoods = getReorderedGoods(\n      goodsFromServer,\n      { isReversed, sortType },\n    );\n    const isSorted = sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isSorted || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {renderedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}